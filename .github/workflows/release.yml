name: Build Unreal Engine Releases

on:
  push:
    branches:
      - master

jobs:
  create-releases:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ue_version: [5.3, 5.4, 5.5]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Update EngineAssociation in ManiacManfred.uproject
        run: |
          jq '.EngineAssociation = "${{ matrix.ue_version }}"' ManiacManfred.uproject > temp.json && mv temp.json ManiacManfred.uproject

      - name: Verify Update
        run: cat ManiacManfred.uproject

      - name: Zip Source Code
        run: |
          zip -r ManiacManfred_UE${{ matrix.ue_version }}.zip . -x ".git/*"

      - name: Delete Existing Release (if it exists)
        run: |
          set -e
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases/tags/ue${{ matrix.ue_version }} --jq .id || echo "NOT_FOUND")
          if [[ "$RELEASE_ID" != "NOT_FOUND" ]]; then
            echo "Deleting existing release..."
            gh api --method DELETE repos/${{ github.repository }}/releases/$RELEASE_ID
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Existing Tag (if it exists)
        run: |
          set -e
          if git ls-remote --tags origin | grep -q "refs/tags/ue${{ matrix.ue_version }}"; then
            echo "Deleting existing tag..."
            git push origin --delete ue${{ matrix.ue_version }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release Without Source Code
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ue${{ matrix.ue_version }}
          name: Unreal Engine ${{ matrix.ue_version }} Release
          body: |
            This release contains the prepackaged build configured for Unreal Engine ${{ matrix.ue_version }}.
          files: ManiacManfred_UE${{ matrix.ue_version }}.zip
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
